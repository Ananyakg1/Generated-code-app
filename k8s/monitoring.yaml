apiVersion: v1
kind: ConfigMap
metadata:
  name: book-review-monitoring-config
  namespace: book-rev-namespace
  labels:
    app.kubernetes.io/name: book-review-app
    app.kubernetes.io/component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "alert_rules.yml"
    
    scrape_configs:
      - job_name: 'book-review-app'
        static_configs:
          - targets: ['book-review-app-service:8080']
        metrics_path: '/actuator/prometheus'
        scrape_interval: 30s
        scrape_timeout: 10s
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
  
  alert_rules.yml: |
    groups:
    - name: book-review-app-alerts
      rules:
      - alert: BookReviewAppDown
        expr: up{job="book-review-app"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Book Review Application is down"
          description: "Book Review Application has been down for more than 1 minute."
      
      - alert: BookReviewAppHighMemoryUsage
        expr: (container_memory_usage_bytes{container="book-review-app"} / container_spec_memory_limit_bytes{container="book-review-app"}) * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Book Review Application high memory usage"
          description: "Book Review Application memory usage is above 90% for more than 5 minutes."
      
      - alert: BookReviewAppHighCPUUsage
        expr: (rate(container_cpu_usage_seconds_total{container="book-review-app"}[5m])) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Book Review Application high CPU usage"
          description: "Book Review Application CPU usage is above 80% for more than 5 minutes."
      
      - alert: BookReviewAppHighResponseTime
        expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{application="book-review-app"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Book Review Application high response time"
          description: "95th percentile response time is above 2 seconds for more than 5 minutes."
      
      - alert: BookReviewAppHighErrorRate
        expr: (rate(http_server_requests_seconds_count{application="book-review-app",status=~"5.."}[5m]) / rate(http_server_requests_seconds_count{application="book-review-app"}[5m])) * 100 > 5
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Book Review Application high error rate"
          description: "Error rate is above 5% for more than 5 minutes."
---
# Ingress for the application (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: book-review-app-ingress
  namespace: book-rev-namespace
  labels:
    app.kubernetes.io/name: book-review-app
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - book-review.example.com
    secretName: book-review-tls
  rules:
  - host: book-review.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: book-review-app-service
            port:
              number: 80
